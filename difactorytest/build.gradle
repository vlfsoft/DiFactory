apply plugin: 'com.android.application'

Properties versionProps = new Properties()
versionProps.loadFromXML(new FileInputStream(file('../../../versionConfig.xml')))

android {

    signingConfigs {
        config {
            Properties props = new Properties()
            props.loadFromXML(new FileInputStream(file('../../../signingConfig.xml')))

            keyAlias props['keyAlias']
            keyPassword props['keyPassword']
            storeFile file(props['storeFile'])
            storePassword props['storePassword']
        }
    }

    compileSdkVersion Integer.parseInt(versionProps.getProperty("compileSdkVersion")).intValue()
    buildToolsVersion versionProps ['buildToolsVersion']
    defaultConfig {
        applicationId 'vlfsoft.difactorytest'
        minSdkVersion Integer.parseInt(versionProps.getProperty("minSdkVersion")).intValue()
        targetSdkVersion Integer.parseInt(versionProps.getProperty("targetSdkVersion")).intValue()
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../../../proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
            testCoverageEnabled true
        }
    }
    productFlavors {
    }

}

def junitVersion = versionProps ['junitVersion']
def mockito_allVersion = versionProps ['mockito_allVersion']
def mockito_coreVersion = mockito_allVersion

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    provided project(':sdannotations')
    provided project(':libsrc')

    // https://developer.android.com/training/testing/unit-testing/local-unit-tests.html
    // Set Up Your Testing Environment
    // Required -- JUnit 4 framework
    testCompile "junit:junit:$junitVersion"
    // Optional -- Mockito framework
    testCompile "org.mockito:mockito-core:$mockito_coreVersion"
    // Set Up Your Testing Environment

}

